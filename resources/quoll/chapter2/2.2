(define (make-point x y)
 (cons x y))

(define (x-point p) (car p))

(define (y-point p) (cdr p))

(define (make-segment a b)
 (cons a b))

(define (start-segment s)
 (car s))

(define (end-segment s)
 (cdr s))

(define (midpoint-segment s)
 (let ((p1 (start-segment s))
       (p2 (end-segment s)))
   (make-segment (/ (+ (x-point p1) (x-point p2)) 2)
                 (/ (+ (y-point p1) (y-point p2)) 2))))

(define (print-point p)
 (newline)
 (display "(")
 (display (x-point p))
 (display ",")
 (display (y-point p))
 (display ")"))

(define (print-segment s)
 (newline)
 (display "(")
 (display (x-point (start-segment s)))
 (display ",")
 (display (y-point (start-segment s)))
 (display ")->(")
 (display (x-point (end-segment s)))
 (display ",")
 (display (y-point (end-segment s)))
 (display ")"))

